import java_cup.runtime.*;
import htmlClasses.*;
import java.util.ArrayList;
action code
{:
private ArrayList<String> cabeceras = new ArrayList<>();
private String listaCabeceras(){
	String s = "<ul>\n<a name=\"inicio\">";
	for(int i = 0;i<this.cabeceras.size();i++){
		s+="<li>\n<a href=\"#"+this.cabeceras.get(i).split(" ")[1]+"\">"+this.cabeceras.get(i)+"</a>\n</li>\n";
	};
	s+="<li><a href=\"#progPpal\">Programa principal</a>\n</li>\n</ul>\n<hr>";
	return s;
}
:}
parser code
{:
public void syntax_error(Symbol cur_token){
System.err.println("An error has been detected on \" "+cur_token.value+" \" whose position is: line -> "+cur_token.left+", column -> "+cur_token.right);
this.report_expected_token_ids();
}
:}
terminal String real, punto, tint, tchar, program, begin, end, tconst, var, procedure, function, div, mod, or, and, not, type, array, of, record, tif, then, telse, twhile, tdo, tfor, to, tcase, coma, puntocoma, igual, mas, dospuntos, puntopunto, asignacion, mayor, menos, menor, menorigual, mayorigual, distinto, por, parentesisizq, parentesisder, corcheteizq, corcheteder, id, constlit, constnumint, constnumreal;
non terminal Nt EXPAUX, PRG, BLQ, DCL, SENTLIST, SENT, DEFCTE, DEFVAR, DEFPROC, DEFFUN, CTELIST, SIMPVALUE, DEFVARLIST, VARLIST, TBAS, FORMAL_PARAMLIST, FORMAL_PARAM, ASIG, PROC_CALL, EXEBLQ, ID, EXP, OP, FACTOR, OPCOMP, OPLOG, OPARIT, SUBPPARAMLIST, EXPLIST, DCLLIST_BLQ, DCL_BLQ, DEFTYPE, TYPELIST, UDTYPE, ALLTYPES, COND, ELSECOND, WLOOP, FLOOP, CASE, CASELIST, DCLLIST;
PRG::= program id:valorid puntocoma BLQ:valorBLQ punto {: for(int i = 0;i<this.cabeceras.size();i++){System.out.println(this.cabeceras.get(i));}; System.out.println(listaCabeceras()); :};
BLQ::= DCLLIST:valorDCLLIST begin SENTLIST:valorSENTLIST end {: String s; 	RESULT = new Nt(valorDCLLIST.value+"begin"+valorSENTLIST.value+"end"); :};
DCLLIST::= DCLLIST:valorDCLL DCL:valorDCL {: RESULT = new Nt(valorDCLL.value+valorDCL.value); :} | {: RESULT = new Nt(""); :};
SENTLIST::= SENT:valor {: RESULT = new Nt(valor.value); :} | SENTLIST:valorSENTL SENT:valorSENT {: RESULT = new Nt(valorSENTL.value+valorSENT.value); :};
DCL::= DEFCTE:valor {: RESULT = new Nt(valor.value); :} | DEFVAR:valor {: RESULT = new Nt(valor.value); :}| DEFPROC:valor {: RESULT = new Nt(valor.value); :}| DEFFUN:valor {: RESULT = new Nt(valor.value); :}| DEFTYPE:valor {: RESULT = new Nt(valor.value); :};
DEFCTE::= tconst CTELIST:valorCTE {: RESULT = new Nt("const"+valorCTE.value); :};
CTELIST::= id:valor igual:valorigual SIMPVALUE:valorSIMP puntocoma {: RESULT = new Nt("<a name=\""+valor+"\">"+valor+"</a>"+valorigual+valorSIMP.value+";"); :}| CTELIST:valorCTE id:valor igual:valorigual SIMPVALUE:valorSIMP puntocoma {: RESULT = new Nt(valorCTE.value+valor+valorigual+valorSIMP.value+";"); :};
SIMPVALUE::= constnumint:valor {:RESULT = new Nt("<span class=\"cte\">"+valor+"</span>"); :} | constnumreal:valor {:RESULT = new Nt("<span class=\"cte\">"+valor+"</span>"); :} | constlit:valor {:RESULT = new Nt("<span class=\"cte\">"+valor+"</span>"); :};
DEFVAR::= var DEFVARLIST:valorDEF puntocoma {: RESULT = new Nt("var"+valorDEF.value+";"); :};
DEFVARLIST::= VARLIST:valorVAR dospuntos:valorpunto ALLTYPES:valorALLT {: RESULT = new Nt(valorVAR.value+valorpunto+valorALLT.value); :}| DEFVARLIST:valorDEF puntocoma VARLIST:valorVAR dospuntos:valorpunto ALLTYPES:valorALLT {: RESULT = new Nt(valorDEF.value+";"+valorVAR.value+valorpunto+valorALLT.value); :};
VARLIST::= id:valor {:RESULT = new Nt("<a name=\""+valor+"\">"+valor+"</a>"); :} | id:valor coma VARLIST:valorVAR {: RESULT = new Nt("<a name=\""+valor+"\">"+valor+"</a> ,"+valorVAR.value); :};
DEFPROC::= procedure:valor1 id:valor FORMAL_PARAMLIST:valorFORMAL puntocoma BLQ:valorBLQ puntocoma {: this.cabeceras.add(valor1+" "+valor+" "+valorFORMAL.value); RESULT = new Nt(valor1+valor+valorFORMAL.value+";"+valorBLQ.value+";"); :};
DEFFUN::= function:valor1 id:valor FORMAL_PARAMLIST:valorFORMAL dospuntos:valorpunto ALLTYPES:valorALLT puntocoma BLQ:valorBLQ puntocoma {: this.cabeceras.add(valor1+" "+valor+" "+valorFORMAL.value+" "+valorpunto+" "+valorALLT.value); RESULT = new Nt(valor1+valor+valorFORMAL.value+valorpunto+valorALLT.value+";"+valorBLQ.value+";"); :};
FORMAL_PARAMLIST::= parentesisizq FORMAL_PARAM:valor parentesisder {: RESULT = new Nt("("+valor.value+")"); :}| {: RESULT = new Nt(""); :};
FORMAL_PARAM::= VARLIST:valorVARL dospuntos:valor ALLTYPES:valorALLT {: RESULT = new Nt(valorVARL.value+valor+valorALLT.value); :}| VARLIST:valorVARL dospuntos:valor ALLTYPES:valorALLT puntocoma FORMAL_PARAM:valorFORM {: RESULT = new Nt(valorVARL.value+valor+valorALLT.value+";"+valorFORM.value); :};
TBAS::= tint:valor {:RESULT = new Nt("<span class=\"palres\">"+valor+"</span>"); :} | real:valor {:RESULT = new Nt("<span class=\"palres\">"+valor+"</span>"); :} | tchar:valor {:RESULT = new Nt("<span class=\"palres\">"+valor+"</span>"); :};
SENT::= ASIG:valorASIG puntocoma {: RESULT = new Nt(valorASIG.value+";"); :}| PROC_CALL:valorPROCCALL puntocoma {: RESULT = new Nt(valorPROCCALL.value+";"); :}| EXEBLQ:valor {: RESULT = new Nt(valor.value); :}| WLOOP:valor {: RESULT = new Nt(valor.value); :}| FLOOP:valor {: RESULT = new Nt(valor.value); :}| CASE:valor {: RESULT = new Nt(valor.value); :};
ASIG::= ID:valorID asignacion:asig EXP:valorEXP {: RESULT = new Nt(valorID.value+asig+valorEXP.value); :};
ID::= id:valor {:RESULT = new Nt("<a href=\"#"+valor+"\"><span class=\"ident\">"+valor+"</span></a>"); :} | id:valor corcheteizq EXP:valorEXP corcheteder {: RESULT = new Nt("<a href=\"#"+valor+"\"><span class=\"ident\">"+valor+"</span></a>"+"["+valorEXP+"]"); :}| id:valor1 punto id:valor2 {: RESULT = new Nt("<a href=\"#"+valor1+"\"><span class=\"ident\">"+valor1+"</span></a>"+"."+"<a href=\"#"+valor2+"\"><span class=\"ident\">"+valor2+"</span></a>"); :};
EXP::= FACTOR:valorFACTOR EXPAUX:valorEXPAUX {:RESULT = new Nt(valorFACTOR.value+valorEXPAUX.value); :};
EXPAUX::= OP:valorOP EXP:valorEXP {:RESULT = new Nt(valorOP.value+valorEXP.value); :}| {: RESULT = new Nt(""); :};
OP::= OPCOMP:valorOPCOMP {:RESULT = new Nt(valorOPCOMP.value); :} | OPLOG:valorOPLOG {: RESULT= new Nt(valorOPLOG.value); :} | OPARIT:valorOPARIT {: RESULT= new Nt(valorOPARIT.value); :};
OPCOMP::= menor:valor {:RESULT = new Nt(valor); :}| mayor:valor {: RESULT = new Nt(valor); :}| menorigual:valor {: RESULT = new Nt(valor); :}| mayorigual:valor {: RESULT = new Nt(valor); :} | igual:valor {: RESULT = new Nt(valor); :} | distinto:valor {: RESULT = new Nt(valor); :};
OPARIT::= mas:valor {: RESULT = new Nt(valor); :} | menos:valor {: RESULT = new Nt(valor); :} | por:valor {: RESULT = new Nt(valor); :} | div:valor {: RESULT = new Nt(valor); :} | mod:valor {: RESULT = new Nt(valor); :};
OPLOG::= or:valor {: RESULT = new Nt(valor); :} | and:valor {: RESULT = new Nt(valor); :};
FACTOR::= SIMPVALUE:valorSIMPVALUE {: RESULT= new Nt(valorSIMPVALUE.value); :}| not:valor FACTOR:valorFACTOR {:RESULT= new Nt(valor+valorFACTOR.value); :} | parentesisizq EXP:valorEXP parentesisder {: RESULT = new Nt("("+valorEXP.value+")"); :}| id:valor SUBPPARAMLIST:valorSUBPPARAMLIST {: RESULT = new Nt("<a href=\"#"+valor+"\"><span class=\"ident\">"+valor+"</span></a>"+valorSUBPPARAMLIST.value);:} | id:valor corcheteizq EXP:valorEXP corcheteder {:RESULT = new Nt("<a href=\"#"+valor+"\"><span class=\"ident\">"+valor+"</span></a>"+"["+valorEXP.value+"]"); :}| id:valor1 punto id:valor2 {: RESULT = new Nt("<a href=\"#"+valor1+"\"><span class=\"ident\">"+valor1+"</span></a>"+"."+"<a href=\"#"+valor2+"\"><span class=\"ident\">"+valor2+"</span></a>"); :};
SUBPPARAMLIST::= parentesisizq EXPLIST:valorEXPLIST parentesisder {:RESULT = new Nt("("+valorEXPLIST.value+")"); :}| {: RESULT = new Nt(""); :};
EXPLIST::= EXP:valorEXP {:RESULT = new Nt(valorEXP.value); :} | EXP:valorEXP coma EXPLIST:valorEXPLIST {:RESULT = new Nt(valorEXP.value+","+valorEXPLIST.value); :};
PROC_CALL::= id:valor SUBPPARAMLIST:valorSUBPARAMLIST {: RESULT = new Nt("<a href=\"#"+valor+"\"><span class=\"ident\">"+valor+"</span></a>"+valorSUBPARAMLIST.value); :};
EXEBLQ::= DCLLIST_BLQ:valorDCL begin SENTLIST:valorSENT end {:RESULT = new Nt(valorDCL.value+"begin"+valorSENT.value+"end"); :} ;
DCLLIST_BLQ::= DCLLIST_BLQ:valorDCL puntocoma DCL_BLQ:valorDCLBLQ {: RESULT = new Nt(valorDCL.value+";"+valorDCLBLQ.value); :}| {:RESULT = new Nt(""); :};
DCL_BLQ::= DEFCTE:valor {: RESULT = new Nt(valor.value); :}| DEFTYPE:valor {: RESULT = new Nt(valor.value); :} | DEFVAR:valor {: RESULT = new Nt(valor.value); :};
DEFTYPE::= type:valor TYPELIST:valorTYPE {: RESULT = new Nt(valor+valorTYPE.value); :};
TYPELIST::= id:valor igual:valorigual UDTYPE:valorUDTYPE puntocoma {: RESULT = new Nt("<a name=\"#"+valor+"\"><span class=\"ident\">"+valor+"</span></a>"+valorigual+valorUDTYPE.value+";"); :} | id:valor igual:valorigual UDTYPE:valorUDTYPE puntocoma TYPELIST:valorTYPE {: RESULT = new Nt("<a name=\"#"+valor+"\"><span class=\"ident\">"+valor+"</span></a>"+valorigual+valorUDTYPE.value+";"+valorTYPE.value); :};
UDTYPE::= array:valor corcheteizq SIMPVALUE:valorSIMP1 puntopunto:valorpunto SIMPVALUE:valorSIMP2 corcheteder of:valorof ALLTYPES:valorALLT {: RESULT = new Nt(valor+"["+valorSIMP1.value+valorpunto+valorSIMP2.value+"]"+valorof+valorALLT.value); :}| record:valor DEFVARLIST:valorDEF end {: RESULT = new Nt(valor+valorDEF.value+"end"); :};
ALLTYPES::= TBAS:valorTB {: RESULT = new Nt(valorTB.value); :}| id:valor {: RESULT = new Nt("<a href=\"#"+valor+"\"><span class=\"ident\">"+valor+"</span></a>"); :};
WLOOP::= twhile EXP:valorEXP tdo SENT:valorSENT {: RESULT = new Nt("while"+valorEXP.value+"do"+valorSENT.value); :};
FLOOP::= tfor id:valor asignacion:valorasig EXP:valorEXP1 to EXP:valorEXP2 tdo SENT:valorSENT {: RESULT = new Nt("for"+"<a href=\"#"+valor+"\"><span class=\"ident\">"+valor+"</span></a>"+valorasig+valorEXP1.value+"to"+valorEXP2.value+"do"+valorSENT.value); :};
CASE::= tcase EXP:valorEXP of CASELIST:valorCASE end {: RESULT = new Nt("case"+valorEXP.value+"of"+valorCASE.value+"end"); :};
CASELIST::= EXP:valueEXP dospuntos:valor SENT:valorSENT puntocoma {: RESULT = new Nt(valueEXP.value+valor+valorSENT.value+";"); :}| EXP:valorEXP dospuntos:valor SENT:valorSENT puntocoma CASELIST:valorCASE {: RESULT = new Nt(valorEXP.value+valor+valorSENT.value+";"+valorCASE.value); :};