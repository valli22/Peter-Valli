import java_cup.runtime.*;
import java.util.ArrayList;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.PrintStream;
import pl.PL;

action code
{:
private Integer cont = 0;
private ArrayList<String> cabeceras = new ArrayList<>();
private String tipos = "";
private String funciones = "";
private Integer principal = 0;
private String listaCabeceras(){
	String s = "<ul>\n<a name=\"inicio\"></a>";
	for(int i = 0;i<this.cabeceras.size();i++){
		s+="<li>\n<a href=\"#"+this.cabeceras.get(i).split(" ")[1]+"\">"+this.cabeceras.get(i)+"</a>\n</li>\n";
	};
	s+="<li><a href=\"#progPpal\">Programa principal</a>\n</li>\n</ul>\n<hr>";
	return s;
}
private void writeHtml(String codigo){
	FileOutputStream nuevoArchivo;
	PrintStream ps;
	PL n = new PL();
	try{
		//nuevoArchivo = new FileOutputStream(argv[i]+".html");
		nuevoArchivo = new FileOutputStream(n.programName+".html");
		ps = new PrintStream(nuevoArchivo);
		String s = "<html>\n"
                + "<head>\n"
                    +"<title>"+n.programName+"</title>\n"
                    + "<style>\n"
                        + ".cte {color:rgb(19,189,72);}\n"
                        + ".ident {color:rgb(55,40,244);}\n"
                        + ".palres {color:rgb(0,0,0);font-weight:bold;}\n"
                    + "</style>\n<style type=\"text/css\"></style>"
                + "</head>\n"
                + "<body>\n"
                    +codigo+"\n"
                + "</body>\n"
            + "</html>";
		ps.println(s);
		ps.close();
	}catch (FileNotFoundException e){
		System.out.println("El archivo no se ha podido encontrar");
	}
}
:}
parser code
{:
public void syntax_error(Symbol cur_token){
System.err.println("An error has been detected on \" "+cur_token.value+" \" whose position is: line -> "+cur_token.left+", column -> "+cur_token.right);
this.report_expected_token_ids();
}
:}
terminal String real, punto, tint, tchar, program, begin, end, tconst, var, procedure, function, div, mod, or, and, not, type, array, of, record, tif, then, telse, twhile, tdo, tfor, to, tcase, coma, puntocoma, igual, mas, dospuntos, puntopunto, asignacion, mayor, menos, menor, menorigual, mayorigual, distinto, por, parentesisizq, parentesisder, corcheteizq, corcheteder, id, constlit, constnumint, constnumreal;
non terminal Nt MP, AUX, EXPAUX, PRG, BLQ, DCL, SENTLIST, SENT, DEFCTE, DEFVAR, DEFPROC, DEFFUN, CTELIST, SIMPVALUE, DEFVARLIST, VARLIST, TBAS, FORMAL_PARAMLIST, FORMAL_PARAM, ASIG, PROC_CALL, EXEBLQ, ID, EXP, OP, FACTOR, OPCOMP, OPLOG, OPARIT, SUBPPARAMLIST, EXPLIST, DCLLIST_BLQ, DCL_BLQ, DEFTYPE, TYPELIST, UDTYPE, ALLTYPES, COND, ELSECOND, WLOOP, FLOOP, CASE, CASELIST, DCLLIST;
PRG::= program id:valorid puntocoma BLQ:valorBLQ punto {: String s = "<a name=\"Inicio\"><h1>Programa: "+valorid+"</h1></a><h2>Funciones y procedimientos</h2>"+listaCabeceras(); s+=this.funciones+"<a name=\"progPpal\"><h2>Programa Principal</h2></a>"+this.tipos+valorBLQ.value+"<br><a href=\"#progPpal\">Inicio del programa principal</a><br><a href=\"#inicio\">Inicio programa</a><br>"; writeHtml(s); :};
BLQ::= DCLLIST:valorDCLLIST begin AUX SENTLIST:valorSENTLIST end {: String s = ""; if(this.principal!=0){s = valorDCLLIST.value;} RESULT = new Nt(s+"<br><span class=\"palres\">begin </span>"+valorSENTLIST.value+"<span class=\"palres\">end </span>"); this.cont--;:};
DCLLIST::= DCLLIST:valorDCLL DCL:valorDCL {: RESULT = new Nt(valorDCLL.value+valorDCL.value); :} | {: RESULT = new Nt(""); :};
SENTLIST::= SENT:valor {: RESULT = new Nt(valor.value); :} | SENTLIST:valorSENTL SENT:valorSENT {: RESULT = new Nt(valorSENTL.value+valorSENT.value); :};
DCL::= DEFCTE:valor {: if(this.principal==0){this.tipos+=valor.value;} RESULT = new Nt(valor.value); :} | DEFVAR:valor {: if(this.principal==0){this.tipos+=valor.value;} RESULT = new Nt(valor.value); :}| DEFPROC:valor {: if(this.principal==0){this.funciones+=valor.value;} RESULT = new Nt(valor.value); :}| DEFFUN:valor {: if(this.principal==0){this.funciones+=valor.value;} RESULT = new Nt(valor.value); :}| DEFTYPE:valor {: if(this.principal==0){this.tipos+=valor.value;} RESULT = new Nt(valor.value); :};
DEFCTE::= tconst CTELIST:valorCTE {: RESULT = new Nt("<span class=\"palres\">const </span>"+valorCTE.value); :};
CTELIST::= id:valor igual:valorigual SIMPVALUE:valorSIMP puntocoma {: RESULT = new Nt("<a name=\""+valor+"\">"+valor+" </a>"+valorigual+" "+valorSIMP.value+";<br>"); :}| CTELIST:valorCTE id:valor igual:valorigual SIMPVALUE:valorSIMP puntocoma {: RESULT = new Nt(valorCTE.value+valor+" "+valorigual+" "+valorSIMP.value+";<br>"); :};
SIMPVALUE::= constnumint:valor {:RESULT = new Nt("<span class=\"cte\"> "+valor+" </span>"); :} | constnumreal:valor {:RESULT = new Nt("<span class=\"cte\"> "+valor+" </span>"); :} | constlit:valor {:RESULT = new Nt("<span class=\"cte\">"+valor+"</span>"); :};
DEFVAR::= var AUX DEFVARLIST:valorDEF puntocoma {: RESULT = new Nt("<span class=\"palres\">var </span><br>"+valorDEF.value); this.cont--; :};
DEFVARLIST::= VARLIST:valorVAR dospuntos:valorpunto ALLTYPES:valorALLT {: RESULT = new Nt("<div style=\"text-indent: "+0.5*this.cont+"cm\">"+valorVAR.value+" "+valorpunto+" "+valorALLT.value+";</div>"); :}| DEFVARLIST:valorDEF puntocoma VARLIST:valorVAR dospuntos:valorpunto ALLTYPES:valorALLT {: RESULT = new Nt(valorDEF.value+"<div style=\"text-indent: "+0.5*this.cont+"cm\">"+valorVAR.value+" "+valorpunto+" "+valorALLT.value+";</div>"); :};
VARLIST::= id:valor {: Nt nt = new Nt("<a name=\""+valor+"\"><span class=\"ident\">"+valor+"</span></a>"); nt.setValueNoHtml("<span class=\"ident\">"+valor+"</span>"); RESULT = nt; :} | id:valor coma VARLIST:valorVAR {: Nt nt = new Nt("<a name=\""+valor+"\"><span class=\"ident\">"+valor+"</span></a> ,"+valorVAR.value); nt.setValueNoHtml("<span class=\"ident\">"+valor+"</span>");RESULT = nt; :};
DEFPROC::= procedure:valor1 MP id:valor FORMAL_PARAMLIST:valorFORMAL puntocoma BLQ:valorBLQ puntocoma {: this.cabeceras.add(valor1+" "+valor+" "+valorFORMAL.valueNoHtml); RESULT = new Nt("<span class=\"palres\">procedure </span>"+"<a name=\""+valor+"\"><span class=\"ident\">"+valor+"</span></a>"+" "+valorFORMAL.value+";<br>"+valorBLQ.value+";<br><a href=\"#"+valor+"\">Inicio de rutina</a><br><a href=\"#Inicio\">Inicio de programa</a><hr>"); this.principal--; :};
DEFFUN::= function:valor1 MP id:valor FORMAL_PARAMLIST:valorFORMAL dospuntos:valorpunto ALLTYPES:valorALLT puntocoma BLQ:valorBLQ puntocoma {: this.cabeceras.add(valor1+" "+valor+" "+valorFORMAL.valueNoHtml+" "+valorpunto+" "+valorALLT.value); RESULT = new Nt("<span class=\"palres\">function </span>"+"<a name=\""+valor+"\"><span class=\"ident\"> "+valor+"</span></a>"+" "+valorFORMAL.value+" "+valorpunto+" "+valorALLT.value+";<br> "+valorBLQ.value+";<br><a href=\"#"+valor+"\">Inicio de rutina</a><br><a href=\"#Inicio\">Inicio de programa</a><hr>"); this.principal--; :};
FORMAL_PARAMLIST::= parentesisizq FORMAL_PARAM:valor parentesisder {: Nt nt = new Nt("("+valor.value+")"); nt.setValueNoHtml("("+valor.valueNoHtml+")");RESULT = nt; :}| {: RESULT = new Nt(""); :};
FORMAL_PARAM::= VARLIST:valorVARL dospuntos:valor ALLTYPES:valorALLT {: Nt nt = new Nt(valorVARL.value+valor+valorALLT.value); nt.setValueNoHtml(valorVARL.valueNoHtml+valor+valorALLT.value);RESULT = nt; :}| VARLIST:valorVARL dospuntos:valor ALLTYPES:valorALLT puntocoma FORMAL_PARAM:valorFORM {: Nt nt = new Nt(valorVARL.value+valor+valorALLT.value+";<br>"+valorFORM.value); nt.setValueNoHtml(valorVARL.valueNoHtml+valor+valorALLT.value+";"+valorFORM.value); RESULT = nt; :};
TBAS::= tint:valor {:RESULT = new Nt("<span class=\"palres\">"+valor+"</span>"); :} | real:valor {:RESULT = new Nt("<span class=\"palres\">"+valor+"</span>"); :} | tchar:valor {:RESULT = new Nt("<span class=\"palres\">"+valor+"</span>"); :};
SENT::= ASIG:valorASIG puntocoma {: RESULT = new Nt("<div style=\"text-indent: "+0.5*this.cont+"cm\">"+valorASIG.value+";</div>"); :}| PROC_CALL:valorPROCCALL puntocoma {: RESULT = new Nt("<div style=\"text-indent: "+0.5*this.cont+"cm\">"+valorPROCCALL.value+";</div>"); :}| EXEBLQ:valor {: RESULT = new Nt("<div style=\"text-indent: "+0.5*this.cont+"cm\">"+valor.value+"</div>"); :}| WLOOP:valor {: RESULT = new Nt("<div style=\"text-indent: "+0.5*this.cont+"cm\">"+valor.value+"</div>"); :}| FLOOP:valor {: RESULT = new Nt("<div style=\"text-indent: "+0.5*this.cont+"cm\">"+valor.value+"</div>"); :}| CASE:valor {: RESULT = new Nt("<div style=\"text-indent: "+0.5*this.cont+"cm\">"+valor.value+"</div>"); :};
ASIG::= ID:valorID asignacion:asig EXP:valorEXP {: RESULT = new Nt(valorID.value+" "+asig+" "+valorEXP.value); :};
ID::= id:valor {:RESULT = new Nt("<a href=\"#"+valor+"\"><span class=\"ident\">"+valor+"</span></a>"); :} | id:valor corcheteizq EXP:valorEXP corcheteder {: RESULT = new Nt("<a href=\"#"+valor+"\"><span class=\"ident\">"+valor+"</span></a>"+"["+valorEXP+"]"); :}| id:valor1 punto id:valor2 {: RESULT = new Nt("<a href=\"#"+valor1+"\"><span class=\"ident\">"+valor1+"</span></a>"+"."+"<a href=\"#"+valor2+"\"><span class=\"ident\">"+valor2+"</span></a>"); :};
EXP::= FACTOR:valorFACTOR EXPAUX:valorEXPAUX {:RESULT = new Nt(valorFACTOR.value+valorEXPAUX.value); :};
EXPAUX::= OP:valorOP EXP:valorEXP {:RESULT = new Nt(" "+valorOP.value+" "+valorEXP.value); :}| {: RESULT = new Nt(""); :};
OP::= OPCOMP:valorOPCOMP {:RESULT = new Nt(valorOPCOMP.value); :} | OPLOG:valorOPLOG {: RESULT= new Nt(valorOPLOG.value); :} | OPARIT:valorOPARIT {: RESULT= new Nt(valorOPARIT.value); :};
OPCOMP::= menor:valor {:RESULT = new Nt(valor); :}| mayor:valor {: RESULT = new Nt(valor); :}| menorigual:valor {: RESULT = new Nt(valor); :}| mayorigual:valor {: RESULT = new Nt(valor); :} | igual:valor {: RESULT = new Nt(valor); :} | distinto:valor {: RESULT = new Nt(valor); :};
OPARIT::= mas:valor {: RESULT = new Nt(valor); :} | menos:valor {: RESULT = new Nt(valor); :} | por:valor {: RESULT = new Nt(valor); :} | div:valor {: RESULT = new Nt(valor); :} | mod:valor {: RESULT = new Nt(valor); :};
OPLOG::= or {: RESULT = new Nt("<span class=\"palres\">or</span>"); :} | and {: RESULT = new Nt("<span class=\"palres\">and</span>"); :};
FACTOR::= SIMPVALUE:valorSIMPVALUE {: RESULT= new Nt(valorSIMPVALUE.value); :}| not FACTOR:valorFACTOR {:RESULT= new Nt("<span class=\"palres\">not</span>"+valorFACTOR.value); :} | parentesisizq EXP:valorEXP parentesisder {: RESULT = new Nt("("+valorEXP.value+")"); :}| id:valor SUBPPARAMLIST:valorSUBPPARAMLIST {: RESULT = new Nt("<a href=\"#"+valor+"\"><span class=\"ident\">"+valor+"</span></a>"+valorSUBPPARAMLIST.value);:} | id:valor corcheteizq EXP:valorEXP corcheteder {:RESULT = new Nt("<a href=\"#"+valor+"\"><span class=\"ident\">"+valor+"</span></a>"+"["+valorEXP.value+"]"); :}| id:valor1 punto id:valor2 {: RESULT = new Nt("<a href=\"#"+valor1+"\"><span class=\"ident\">"+valor1+"</span></a>"+"."+"<a href=\"#"+valor2+"\"><span class=\"ident\">"+valor2+"</span></a>"); :};
SUBPPARAMLIST::= parentesisizq EXPLIST:valorEXPLIST parentesisder {:RESULT = new Nt("("+valorEXPLIST.value+")"); :}| {: RESULT = new Nt(""); :};
EXPLIST::= EXP:valorEXP {:RESULT = new Nt(valorEXP.value); :} | EXP:valorEXP coma EXPLIST:valorEXPLIST {:RESULT = new Nt(valorEXP.value+","+valorEXPLIST.value); :};
PROC_CALL::= id:valor SUBPPARAMLIST:valorSUBPARAMLIST {: RESULT = new Nt("<a href=\"#"+valor+"\"><span class=\"ident\">"+valor+"</span></a>"+valorSUBPARAMLIST.value); :};
EXEBLQ::= DCLLIST_BLQ:valorDCL begin AUX SENTLIST:valorSENT end {: RESULT = new Nt(valorDCL.value+"<br><span class=\"palres\">begin</span>"+valorSENT.value+"<span class=\"palres\">end</span>"); this.cont--; :} ;
DCLLIST_BLQ::= DCLLIST_BLQ:valorDCL puntocoma DCL_BLQ:valorDCLBLQ {: RESULT = new Nt(valorDCL.value+";<br>"+valorDCLBLQ.value); :}| {:RESULT = new Nt(""); :};
DCL_BLQ::= DEFCTE:valor {: RESULT = new Nt(valor.value); :}| DEFTYPE:valor {: RESULT = new Nt(valor.value); :} | DEFVAR:valor {: RESULT = new Nt(valor.value); :};
DEFTYPE::= type AUX TYPELIST:valorTYPE {: RESULT = new Nt("<span class=\"palres\">type</span><br>"+valorTYPE.value); this.cont--; :};
TYPELIST::= id:valor igual:valorigual UDTYPE:valorUDTYPE puntocoma {: RESULT = new Nt("<div style=\"text-indent: "+0.5*this.cont+"cm\"><a name=\"#"+valor+"\"><span class=\"ident\">"+valor+"</span></a>"+valorigual+valorUDTYPE.value); :} | id:valor igual:valorigual UDTYPE:valorUDTYPE puntocoma TYPELIST:valorTYPE {: RESULT = new Nt("<div style=\"text-indent: "+0.5*this.cont+"cm\"><a name=\"#"+valor+"\"><span class=\"ident\">"+valor+"</span></a>"+valorigual+valorUDTYPE.value+valorTYPE.value); :};
UDTYPE::= array corcheteizq SIMPVALUE:valorSIMP1 puntopunto:valorpunto SIMPVALUE:valorSIMP2 corcheteder of ALLTYPES:valorALLT {: RESULT = new Nt("<span class=\"palres\">array</span>"+"["+valorSIMP1.value+valorpunto+valorSIMP2.value+"]"+"<span class=\"palres\"> of </span>"+valorALLT.value+";</div>"); :}| record AUX DEFVARLIST:valorDEF end {: RESULT = new Nt("<span class=\"palres\">record</span></div>"+valorDEF.value+"<div style=\"text-indent: "+0.5*(this.cont-1)+"cm\"><span class=\"palres\">end</span>;</div>"); this.cont--; :};
ALLTYPES::= TBAS:valorTB {: RESULT = new Nt(valorTB.value); :}| id:valor {: RESULT = new Nt("<a href=\"#"+valor+"\"><span class=\"ident\">"+valor+"</span></a>"); :};
WLOOP::= twhile AUX EXP:valorEXP tdo SENT:valorSENT {: RESULT = new Nt("<span class=\"palres\">while</span>"+valorEXP.value+"<span class=\"palres\"> do </span>"+valorSENT.value); this.cont--; :};
FLOOP::= tfor AUX id:valor asignacion:valorasig EXP:valorEXP1 to EXP:valorEXP2 tdo SENT:valorSENT {: RESULT = new Nt("<span class=\"palres\">for </span>"+"<a href=\"#"+valor+"\"><span class=\"ident\">"+valor+"</span></a>"+valorasig+valorEXP1.value+"<span class=\"palres\"> to </span>"+valorEXP2.value+" do "+valorSENT.value); this.cont--; :};
CASE::= tcase EXP:valorEXP of AUX AUX CASELIST:valorCASE end {: RESULT = new Nt("<div style=\"text-indent: "+0.5*(this.cont-2)+"cm\"><span class=\"palres\">case </span>"+valorEXP.value+"<span class=\"palres\"> of </span></div>"+valorCASE.value+"<div style=\"text-indent: "+0.5*(this.cont-2)+"cm\"><span class=\"palres\">end</span></div>"); this.cont-=2; :};
CASELIST::= EXP:valueEXP dospuntos:valor SENT:valorSENT puntocoma {: RESULT = new Nt("<div style=\"text-indent: "+0.5*(this.cont-1)+"cm\">"+valueEXP.value+valor+"</div>"+valorSENT.value+"<div style=\"text-indent: "+0.5*(this.cont-1)+"cm\">;</div>"); :}| EXP:valorEXP dospuntos:valor SENT:valorSENT puntocoma CASELIST:valorCASE {: RESULT = new Nt("<div style=\"text-indent: "+0.5*(this.cont-1)+"cm\">"+valorEXP.value+valor+"</div>"+valorSENT.value+"<div style=\"text-indent: "+0.5*(this.cont-1)+"cm\">;</div>"+valorCASE.value); :};
AUX::= {: this.cont++; :};
MP::= {: this.principal++; :};