import java_cup.runtime.*;
terminal int,char,program,begin,end,const,var,procedure,function,div,mod,or,and,not,type,array,of,record,if,then,else,while,do,for,to,case,coma,puntocoma,igual,mas,dospuntos,asignacion,mayor,menos,menorigual,mayorigual,distinto,menos,por,parentesisizq,parentesisder,corcheteizq,corcheteder,id,constnumint,constnumreal,constnuminth,constnumrealh;
non terminal PRG,BLQ,DCLLIST,DCL,SENTLIST,SENT,DEFCTE,DEFVAR,DEFPROC,DEFFUN, CTELIST,SIMPVALUE,DEFVARLIST,VARLIST,TBAS,FORMAL_PARAMLIST,FORMAL_PARAM,ASIG,PROC_CALL,EXEBLQ,ID,EXP,OP,FACTOR,OPCOMP,OPLOG,OPARIT,SUBPPARAMLIST,EXPLIST,DCLLIST_BLQ,DCL_BLQ,DEFTYPE,TYPELIST,UDTYPE,ALLTYPES,COND,ESLSECOND,WLOOP,FLOOP,CASE,CASELIST;
PRG ::= program id puntocoma BLQ punto;
BLQ ::= DCLLIST begin SENTLIST end;
DCLLIST ::= DCLLIST DCL | ;
SENTLIST ::= SENT | SENTLIST SENT
DCL ::= DEFCTE | DEFVAR | DEFPROC | DEFFUN | DEFTYPE | DEFTYPE
DEFCTE ::= const CTELIST;
CTELIST ::= id igual SIMPVALUE puntocoma | CTELIST id igual SIMPVALUE puntocoma;
SIMPVALUE ::= constnumint | constnumreal | constlit;
DEFVAR ::= var DEFVARLIST puntocoma;
DEFVARLIST ::= VARLIST puntocoma ALLTYPES | DEFVARLIST puntocoma VARLIST dospuntos ALLTYPES;
VARLIST ::= id | id puntocoma VARLIST;
DEFPROC ::=  procedure id FORMAL_PARAMLIST puntocoma BLQ puntocoma; 
DEFFUN ::=  function id FORMAL_PARAMLIST dospuntos ALLTYPES puntocoma BLQ puntocoma; 
FORMAL_PARAMLIST ::= parentesisizq FORMAL_PARAM parentesisder | ;
FORMAL_PARAM ::= VARLIST dospuntos ALLTYPES | VARLIST dospuntos ALLTYPES puntocoma FORMAL_PARAM;
TBAS ::= int | real | char;
SENT ::= ASIG puntocoma | PROC_CALL puntocoma | EXEBLQ | COND | WLOOP| FLOOP | CASE;
ASIG ::= ID asignacion EXP; 
ID := id | id corcheteizq EXP corcheteder | id punto id;
EXP ::= EXP OP EXP | FACTOR;
OP ::= OPCOMP | OPLOG | OPARIT; 
OPCOMP ::= menor | mayor | menorigual | mayorigual | igual | distinto;
OPARIT ::= mas | menos | por | div | mod;
OPLOG ::= or | and;
FACTOR ::= SIMPVALUE | not FACTOR | parentesisizq EXP parentesisder | id SUBPPARAMLIST | id corcheteizq EXP corcheteder | id punto id;
SUBPPARAMLIST ::= parentesisizq EXPLIST parentesisder;
EXPLIST ::= EXP | EXP coma EXPLIST;
PROC_CALL ::= id SUBPPARAMLIST;
EXEBLQ ::= DCLLIST_BLQ begin SENTLIST end; 
DCLLIST_BLQ ::= DCLLIST_BLQ puntocoma DCL_BLQ | ;
DCL_BLQ ::= DEFCTE | DEFTYPE | DEFVAR;
DEFTYPE ::= type TYPELIST;
TYPELIST ::= id igual UDTYPE puntocoma | id igual UDTYPE puntocoma TYPELIST;
UDTYPE ::= array corcheteizq SIMPVALUE puntopunto SIMPVALUE corcheteder of ALLTYPES;
ALLTYPES ::= TBAS | id;
DEFTYPE ::= type TYPELIST;
TYPELIST ::= id igual UDTYPE puntocoma | id igual UDTYPE puntocoma TYPELIST;
UDTYPE ::= record DEFVARLIST end;
COND ::= if EXP then SENT ELSECOND;
ELSECOND ::= else SENT |;
WLOOP ::= while EXP do SENT;
FLOOP ::= for id asignacion EXP to EXP do SENT;
CASE ::= case EXP of CASELIST end;
CASELIST ::= EXP dospuntos SENT puntocoma | EXP dospuntos SENT puntocoma CASELIST;